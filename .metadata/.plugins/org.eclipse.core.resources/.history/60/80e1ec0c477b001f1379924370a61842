package com.bptn.course._03_number_of_steps;

public class StepsToZero {
	
	/*
	 * Given an integer num, return the number of steps it will take to reduce it to zero according to the following rules:
       If the current number is even, you have to divide it by 2. Otherwise, 
       you have to subtract 1 from it. Repeat this pattern until num = 0.
	 * */
	public static int numberOfSteps(int num) {
        int steps = 0;

        // Fill in the code below based on the problem statement
        while(num > 0) {
        	if(num % 2 == 0) {
        		num = num / 2
        	}
        }

        return steps;
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// Test 1
        int num = 123;
        int steps = numberOfSteps(num);
        System.out.println("Number of steps to reduce " + num + " to zero: " + steps);

        // Test 2
        num = 14;
        steps = numberOfSteps(num);
        System.out.println("Number of steps to reduce " + num + " to zero: " + steps);

	}

}
